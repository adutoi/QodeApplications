This is not very "clean" code, but, with any luck, it will only ever have
to be run a few dozen times ever.  Some options still need to be set by 
editing the top level file, derive_diagrams.py.

For publications and notes, set frags as (1,2) and run with no options
or with leave-tex (for copying into other documents).

For code:

 1. set frags to (0,1)

 2. Run 3 times, with different symbols set to generate t, u0, and u1 integrals
    (see commented options in the file)

 3. u0 and u1 info will need to be manually combined when integrating into runable code

 4. For the t, u0, and v integrals, the dimer diagram using the single-fragment integral
    (resulting in a delta) should be discarded because this is taken care of at a higher level
    [Explicity: ST2[0]->t00, SU2[0]->u000, SV2[0]->v0000]

 5. For the u1 integral, the monomer diagram can be discarded because this is technically
    a dimer term (using the nucleus of different fragment)
    [Explicitly: SU1[0]->u100]

 6. Relatedly, the u1 dimer diagram using the "single-fragment" integral (resulting in a delta)
    is special as it really is a dimer diagram.  Fortunately, it is the only one of this type
    and has already been dealt with.  The auto-generated code has been saved but completely
    commented out and replaced, and the Dchgs entry for this terms catalog had to be manually
    changed from (0,)->(0,0).
    [Explicitly: SU2[0]->u100]

Everything has been tested very well for dimer terms up to high order, but it is certain that
there are bugs for dimer and higher.  It may be that the bugs are only in the code generation
and not in the latex derivation, and they may be quickly fixed.  The nastiest parts of the code
are all the painful late-in-time hacks needed to print out the autogenerated code (see also 
comments in the top-level file).  Should one have to dig into this at a later date, it may be
advisable to temporarily remove everything that has to do with auto-generated code output
in order to most cleanly see the overall structure, and vet its soundness, then put the code
generation back more cleanly.
